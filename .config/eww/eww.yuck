(defwidget bar []
  (centerbox :orientation "h"
    (startstuff)
    (workspaces)
    (endstuff)
  )
)

(defwidget endstuff []
  (box :class "endstuff" :orientation "h" :spacing 6 :space-evenly false :halign "end" :valign "center"
    (ram)
    (network)
    (time)
    (battery-widget)
    (sound)
    (brightness)
    (label :text "")
  )
)

(defwidget startstuff []
  (box :class "startstuff" :orientation "h" :spacing 8 :space-evenly false :halign "start" :valign "center"
    (label :text "")
    (systray-widget)
  )
)

(defvar hover_my_battery false)

(defwidget battery-widget []
  (eventbox
    :class "battery-container"
    :onhover "eww update hover_my_battery=true"
    :onhoverlost "eww update hover_my_battery=false"
    (box
    :class "battery"
    :orientation "h"
    :spacing 6
    :space-evenly false
    (label
      :class "icon"
      :text {
        EWW_BATTERY["BAT0"].status == "Charging" ? "" :  
        EWW_BATTERY["BAT0"].status == "Full"     ? "" :
        EWW_BATTERY["BAT0"].capacity > 80 ? "" :
        EWW_BATTERY["BAT0"].capacity > 60 ? "" :
        EWW_BATTERY["BAT0"].capacity > 40 ? "" :
        EWW_BATTERY["BAT0"].capacity > 20 ? "" :
                                            ""
      }
    )
    (revealer
        :reveal hover_my_battery
        :transition "slideright"
        :duration "300ms"
        (label :class {hover_my_battery ? "battery-visible" : "battery-hidden"} :text {round(EWW_BATTERY["BAT0"].capacity,0) + "%"})
      )
    )
  )
)

(defvar ws_active "1")
(defvar ws_occupied "")

(defwidget workspace [num icon]
  (button
    :class {
      ws_active == num ? "ws-focused" :
      ws_occupied =~ num ? "ws-occupied" :
      "ws-empty"
    }
    "${icon}"
  )
)

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "center"
       :valign "center"
       :spacing 3
    (workspace :num "1" :icon "1")
    (workspace :num "2" :icon "2")
    (workspace :num "3" :icon "3")
    (workspace :num "4" :icon "4")
    (workspace :num "5" :icon "5")
    (workspace :num "6" :icon "6")
    (workspace :num "7" :icon "7")
    (workspace :num "8" :icon "8")
    (workspace :num "9" :icon "9")
    (workspace :num "10" :icon "0")
  )
)

(defpoll time-full :interval "30s"
  "date '+%H:%M %b %d, %Y'")

(defpoll time-short :interval "30s"
  "date '+%d/%m/%Y'"
)

(defwidget time []
  (box :class "time-container"
    (tooltip
      (label :class "time-full" :text time-full)
      (label :text time-short)
    )
  )
)

(defvar volume_icon "󰖀")
(defvar volume_text "0%")
(defvar hover_my_sound false)

(defwidget sound []
  (eventbox
    :class "sound-container"
    :onhover "eww update hover_my_sound=true"
    :onhoverlost "eww update hover_my_sound=false"
    (box
      :orientation "horizontal"
      :spacing 6
      :space-evenly false
      (label :text volume_icon)
      (revealer
        :reveal hover_my_sound
        :transition "slideright"
        :duration "300ms"
        (label :class {hover_my_sound ? "sound-visible" : "sound-hidden"} :text volume_text)
      )
    )
  )
)

(defvar brightness_status "0")
(defvar hover_my_brightness false)

(defwidget brightness []
  (eventbox
    :class "brightness-container"
    :onhover "eww update hover_my_brightness=true"
    :onhoverlost "eww update hover_my_brightness=false"
    (box :class "brightness"
       :spacing 8
       :space-evenly false
      (label :text "󰃞")
      (revealer
        :reveal hover_my_brightness
        :transition "slideright"
        :duration "300ms"
        (label :class {hover_my_brightness ? "brightness-visible" : "brightness-hidden"} :text {brightness_status + "%"})
      )
    )
  )
)

(defvar network_download_value "0")
(defvar network_download_unit "KB/s")
(defvar network_upload_value "0")
(defvar network_upload_unit "KB/s")

(defwidget network []
  (box :class "network"
       :spacing 5
    (label :text "↓ ${network_download_value} ${network_download_unit}")
    (label :text "↑ ${network_upload_value} ${network_upload_unit}")
  )
)

(defpoll ram_usage :interval "5s" "~/.config/eww/scripts/ram_usage.sh")

(defwidget ram []
  (box :class "ram"
    (label :text ram_usage)
  )
)

(defwidget systray-widget []
  (systray
    :spacing 6
    :orientation "h"
    :icon-size 18
    :prepend-new true
  )
)

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "20px")
  (bar)
)
